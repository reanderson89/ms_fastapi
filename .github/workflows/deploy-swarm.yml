name: Deploy to Docker Swarm

on:
  # push:
  #   branches:
  #     - 'clark-*-docker-swarm-*'
  
  workflow_dispatch:
    inputs:
      tag:
        description: 'Which Docker image tag?'
        required: true
        default: 'latest'
      environment:
        description: 'To what environment?'
        type: choice
        default: 'development'
        options:
          - development
          - production

# TODO this is temporary
env:
  IMAGE_TAG: "blueboardinc/milestones-api:v0.0.8-3ff2d0d"

jobs:
  deploy:
    name: Deploy ${{ github.event.inputs.tag }} to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    # TODO this is temporary
    environment: development
    # environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn

      - name: Setup VPN config
        run: |
          echo "${{ secrets.VPN_CA_CRT }}" > ca.crt
          echo "${{ secrets.VPN_CERT_CRT }}" > user.crt
          echo "${{ secrets.VPN_CERT_KEY }}" > user.key && chmod 400 user.key
          echo "${{ secrets.VPN_SECRET_USERNAME_PASSWORD }}" > secret.txt && chmod 400 secret.txt
          echo "${{ secrets.VPN_TLS_KEY }}" > tls.key

      - name: Connect VPN
        run: sudo openvpn --config ".github/vpn/config.ovpn" --log "vpn.log" --daemon
  
      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c1 172.27.0.3; do sleep 2; done
  
      - name: Prepare docker-swarm.yml
        env:
          ACCOUNT_SID: ${{ secrets.ACCOUNT_SID }}                       # global
          ACCOUNT_TOKEN: ${{ secrets.ACCOUNT_TOKEN }}                   # global
          ALGORITHM: ${{ secrets.ALGORITHM }}                           # global
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}           # environment
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}   # environment
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}               # environment
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}                     # environment
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}                 # environment
          # MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}     # environment -- TODO this is used in docker-galera-swarm.yml, probably deprecated???
          SECRET_KEY: ${{ secrets.SECRET_KEY }}                         # environment
          SPARKPOST_KEY: ${{ secrets.SPARKPOST_KEY }}                   # global
          # TODO commetning is temporary
          # IMAGE_TAG: ${{ github.event.inputs.tag }}                     # workflow variable
        run: |
          mv docker-swarm.yml docker-swarm.yml.orig
          envsubst < docker-swarm.yml.orig > docker-swarm.yml
          echo -en "\n#\n# This config was auto-generated by a Github Action on $(date)\n#\n" >> docker-swarm.yml

      - name: Copy docker-swarm.yml to all nodes
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOSTS }}                                    # environment
          port: 22
          username: blueboard
          key: ${{ secrets.SSH_KEY }}                                   # environment
          source: docker-swarm.yml
          target: /home/blueboard

      - name: Pull image and update Docker Swarm on leader node
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.LEADER }}                                   # environment
          port: 22
          username: blueboard
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/blueboard
            ./run.sh ${{ secrets.DOCKERHUB_USERNAME }} ${{ secrets.DOCKERHUB_TOKEN }} > out.log

      - name: Stop VPN connection
        if: always()
        run: |
          sudo chmod 444 vpn.log
          cat vpn.log
          sudo killall openvpn
      