#
# Use with a .env file like:
# TAG=latest
#
# test with: docker compose config
#
#
# docker-compose --file docker-cdocker imompose-dev.yml up --build
#
version: '3'
services:
  milestones_db:
    container_name: milestones_db
    hostname: milestones_db
    image:  mariadb:latest
    volumes:
      - '/opt/mariadb-data/:/var/lib/mysql'
    environment:
      # because /opt/mariadb-data is being exposed into the container, changing the root
      # password env var (once the data dir exists) will not work, you must do that
      # through mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: '%'
      MYSQL_LOG_CONSOLE: true
      MYSQL_DATABASE: blueboard_milestones
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 3306:3306 # probably don't need this
    restart: always
  milestones_api:
    container_name: milestones_api
    image:  "blueboardinc/milestones-api:${TAG}"
    environment:
      ACCOUNT_SID: ${ACCOUNT_SID} # from .env
      ACCOUNT_TOKEN: ${ACCOUNT_TOKEN} # from .env
      ALEMBIC_INI_FILE: "alembic.ini"
      ALGORITHM: ${ALGORITHM}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID} # from .env
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY} # from .env
      AWS_ROLE_ARN: ${AWS_ROLE_ARN} # from .env
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME} # from .env      
      DD_TRACE_ENABLED: false # Datadog is fully disabled
      ENV: local
      LOG_LEVEL: debug
      MILESTONES_BOOTSTRAP: "migrations/milestones_nodata_v1.9.2.sql"
      MYSQL_DATABASE: blueboard_milestones
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD} # see comment above
      MYSQL_HOSTNAME: milestones_db
      MYSQL_PORT: 3306
      SECRET_KEY: ${SECRET_KEY} # from .env
      SPARKPOST_KEY: ${SPARKPOST_KEY} # from .env
      TWILIO_FROM: "+16193299600"
    ports:
      - 8080:80 # probably don't need this
    depends_on:
      - milestones_db
    entrypoint: /entrypoint.sh # this is renamed entrypoint_hosted.sh
    restart: always
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: Dockerfile.nginx
      args:
        - DOCS_USERNAME=milestones
        - DOCS_PASSWORD=${DOCS_PASSWORD}
    image: custom-nginx-proxy:latest # custom name
    ports:
      - 80:80 # host:container
    restart: always
  datadog_agent:
    container_name: datadog_agent
    build:
      context: .
      dockerfile: Dockerfile.datadog
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    environment:
      DD_APM_ENABLED: true
      DD_APM_NON_LOCAL_TRAFFIC: true
      DD_LOGS_ENABLED: true
      DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL: true
      DD_SERVICE: "milestones-api"
      DD_ENV: "dev"
      DD_API_KEY: ${DD_API_KEY}
      DD_CONTAINER_INCLUDE: "name:milestones_api"
      DD_CONTAINER_EXCLUDE: "name:milestones_db name:datadog name:nginx"
    restart: always
