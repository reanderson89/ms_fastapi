version: '3'
services:
  milestones_db:
    container_name: milestones_db
    build:
      context: .
      dockerfile: Docker/Dockerfile.milestones_db
    volumes:
      - './mariadb-data/:/var/lib/mysql'
    environment:
      # server settings
      MYSQL_ROOT_PASSWORD: password
      MYSQL_ROOT_HOST: '%'
      MYSQL_LOG_CONSOLE: "true"
      # bootstrap a db and db user
      MYSQL_DATABASE: blueboard_milestones
      MYSQL_USER: milestones
      MYSQL_PASSWORD: milestones
    expose:
      - 3306
    ports:
      - 3306:3306
  milestones_api:
    build:
      context: .
      dockerfile: Docker/Dockerfile.milestones_api_localhost
    # You can also use existing image like this:
    # image: blueboardinc/milestones-api:0.0.2
    container_name: milestones_api
    environment:
      ACCOUNT_SID: ${ACCOUNT_SID}
      ACCOUNT_TOKEN: ${ACCOUNT_TOKEN}
      ALEMBIC_INI_FILE: "alembic.ini"
      ALGORITHM: ${ALGORITHM}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      AWS_ROLE_ARN: ${AWS_ROLE_ARN}
      DD_TRACE_ENABLED: false # Datadog is fully disabled
      ENV: local
      LOG_LEVEL: debug
      MILESTONES_BOOTSTRAP: "migrations/milestones_nodata_v1.9.2.sql"
      MYSQL_DATABASE: blueboard_milestones
      MYSQL_HOSTNAME: milestones_db # this is basically container name (above)
      MYSQL_PASSWORD: milestones
      MYSQL_PORT: 3306
      MYSQL_USER: milestones
      SECRET_KEY: ${SECRET_KEY}
      SPARKPOST_KEY: ${SPARKPOST_KEY}
      TWILIO_FROM: "+16193299600"
    volumes:
      - ./app:/app/app
      - ./tests:/app/tests
    ports:
      - '80:80'
    depends_on:
      - milestones_db
    entrypoint: /entrypoint.sh # use start-reload.sh as the entrypoint only if using tiangolo's Docker image in Dockerfile.milestones_api_deprecated
    restart: always
