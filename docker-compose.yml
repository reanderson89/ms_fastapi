version: '3'
services:
  milestones_db:
    container_name: milestones_db
    build:
      context: .
      dockerfile: Dockerfile.milestones_db
    volumes:
      - './mariadb-data/:/var/lib/mysql'
    environment:
      # server settings
      MYSQL_ROOT_PASSWORD: password
      MYSQL_ROOT_HOST: '%'
      MYSQL_LOG_CONSOLE: true
      # bootstrap a db and db user
      MYSQL_DATABASE: blueboard_milestones
      MYSQL_USER: milestones
      MYSQL_PASSWORD: milestones
    expose:
      - 3306
    ports:
      - 3306:3306
  milestones_api:
    build:
      context: .
      dockerfile: Dockerfile.milestones_api_v2
    # use existing image:
    # image: blueboardinc/milestones-api:0.0.2
    container_name: milestones_api
    environment:
      # temporary!
      DD_SERVICE: "milestones-api-local"
      DD_ENV: "local"
      DD_VERSION: "0.1.0"
      DD_TRACE_AGENT_URL: http://datadog:8126

      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      BEARER_TOKEN: ${BEARER_TOKEN}
      ENV: local
      LOG_LEVEL: debug
      # connection settings for the app, these should match server's config (above)
      MYSQL_DATABASE: blueboard_milestones
      MYSQL_USER: milestones
      MYSQL_PASSWORD: milestones
      MYSQL_HOSTNAME: milestones_db # this is basically container name (above)
      MYSQL_PORT: 3306
      MILESTONES_BOOTSTRAP: "migrations/milestones_nodata_v1.4.sql"
    volumes:
      - ./app:/app/app
    ports:
      - '80:80'
    depends_on:
      - milestones_db
    # use this entrypoint only if using tiangolo's Docker image in Dockerfile.milestones_api
    # entrypoint: /start-reload.sh
    restart: on-failure