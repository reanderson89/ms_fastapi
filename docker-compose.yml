# For Docker testing, you can edit the Dockerfile then build/tag:
#   docker build -t bullseye:test -f Docker/Dockerfile.milestones_api_localhost .
# Then use the tagged image (below)

version: '3'
services:
  milestones_db:
    container_name: milestones_db
    # image: postgres:latest
    build:
      context: .
      dockerfile: Docker/Dockerfile.milestones_db
    volumes:
      - './postgresDB-data/:/var/lib/postgresql/data'
    environment:
      POSTGRES_DB: blueboard_milestones
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      PGPASSWORD: password
    expose:
      - 5432
    ports:
      - 5433:5432
    networks:
      - auth_network
  milestones_api:
    build:
      context: .
      dockerfile: Docker/Dockerfile.milestones_api_localhost
    # You can also use existing image like this:
    # image: blueboardinc/milestones_api:0.0.2
    container_name: milestones_api
    environment:
      ACCOUNT_SID: ${ACCOUNT_SID}
      ACCOUNT_TOKEN: ${ACCOUNT_TOKEN}
      ALEMBIC_INI_FILE: 'alembic.ini'
      ALGORITHM: 'HS256'
      BASE_URL: 'http://localhost:5173/'
      # No CRON
      CRON: "true"
      CRON_TOKEN: ${CRON_TOKEN}
      DEBUG: 'False'
      DD_TRACE_ENABLED: 'false' # Datadog is fully disabled
      ENV: local
      FERNET_KEY: ${FERNET_KEY}
      JOB_QUEUE_HOST: 'bean_queue'
      JOB_QUEUE_PORT: 11300
      JOB_QUEUE_TUBE: 'milestones_tube'
      JWT_ENFORCED: 'false'
      LOG_LEVEL: debug
      MOCK: ${MOCK}
      POSTGRES_DB: blueboard_milestones
      POSTGRES_HOSTNAME: milestones_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_PORT: 5432
      RAILS_API: ${RAILS_API}
      RAILS_JWT_SECRET_KEY: ${RAILS_JWT_SECRET_KEY}
      SECRET_KEY: ${SECRET_KEY}
      SPARKPOST_KEY: ${SPARKPOST_KEY}
      TWILIO_FROM: '+16193299600'
      YASS_URL: 'http://yass_api:83/v1'
    volumes:
      - ./app:/app/app
      - ./tests:/app/tests
      - ./burp:/app/burp
    ports:
      - '80:80'
    depends_on:
      - milestones_db
    restart: always
    networks:
      - auth_network
    entrypoint: /entrypoint.sh # use start-reload.sh as the entrypoint only if using tiangolo's Docker image in Dockerfile.milestones_api_deprecated

networks:
  auth_network:
      driver: bridge
      name: auth_network
      external: true
