# This is the Docker stack file that describes the Milestones application
#
# Do a Docker login then:
# docker stack deploy --compose-file docker-swarm.yml --with-registry-auth milestones
#
# Compose file deploy reference:
# https://docs.docker.com/compose/compose-file/deploy/
#
# Docker stacks do not support .env files so env var substitution in this file is done during CI/CD
#
# If you omit the mode key or set it to ingress, the routing mesh is used.
# https://docs.docker.com/engine/swarm/ingress/
#
version: "3.9"
services:
  api:
    image: ${IMAGE_TAG}
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 2
        delay: 15s
        order: start-first
    environment:
      ACCOUNT_SID: "${ACCOUNT_SID}"
      ACCOUNT_TOKEN: "${ACCOUNT_TOKEN}"
      ALEMBIC_INI_FILE: "NO"
      ALGORITHM: "${ALGORITHM}"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_BUCKET_NAME: "${AWS_BUCKET_NAME}"
      AWS_ROLE_ARN: "${AWS_ROLE_ARN}"
      BASE_URL: "https://milestones-dev-4.blueboard.app"
      DD_TRACE_ENABLED: "false" # Datadog is fully disabled
      ENV: dev
      LOG_LEVEL: debug
      MILESTONES_BOOTSTRAP: "NO"
      MYSQL_DATABASE: blueboard_milestones
      MYSQL_HOSTNAME: "${MYSQL_HOSTNAME}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_PORT: 3306
      MYSQL_USER: milestones
      SECRET_KEY: "${SECRET_KEY}"
      SPARKPOST_KEY: "${SPARKPOST_KEY}"
      TWILIO_FROM: "+16193299600"
    networks:
      - blueboard-network
    ports:
      - 8080:80
    entrypoint: /entrypoint.sh # this is renamed entrypoint_hosted.sh

networks:
  blueboard-network:
    external: true
