"""changes send on to datetime

Revision ID: 5e6bdde58ce4
Revises: 04a533a9ac68
Create Date: 2024-02-22 14:11:02.920186-08:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5e6bdde58ce4'
down_revision = '04a533a9ac68'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # converts any current date strings to the correct Date() format
    op.execute("""
    UPDATE staged_reward
    SET send_on = TO_CHAR(TO_DATE(send_on, 'MM-DD-YYYY'), 'YYYY-MM-DD')
    WHERE send_on IS NOT NULL AND send_on != ''
    """)
    op.execute("""
        ALTER TABLE staged_reward 
        ALTER COLUMN send_on TYPE DATE
        USING send_on::DATE
    """)
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('rule', 'time_created',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('staged_reward', 'send_on',
               existing_type=sa.VARCHAR(length=56),
               type_=sa.Date(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # op.execute("""
    # UPDATE staged_reward
    # SET send_on = TO_CHAR(TO_DATE(send_on, 'YYYY-MM-DD'), 'MM-DD-YYYY')
    # WHERE send_on IS NOT NULL AND send_on != ''
    # """)
    op.execute("""
        ALTER TABLE staged_reward 
        ALTER COLUMN send_on TYPE VARCHAR(56)
        USING TO_CHAR(send_on, 'MM-DD-YYYY')
    """)
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('staged_reward', 'send_on',
               existing_type=sa.Date(),
               type_=sa.VARCHAR(length=56),
               nullable=False)
    op.alter_column('rule', 'time_created',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###
